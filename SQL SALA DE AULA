Prática para a prova

create database loja;
use loja;

CREATE TABLE clientes (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    telefone VARCHAR(20),
    endereco TEXT
);

CREATE TABLE produtos (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    descricao TEXT,
    preco DECIMAL(10,2) NOT NULL,
    estoque INTEGER NOT NULL
);

CREATE TABLE pedidos (
    id SERIAL PRIMARY KEY,
    cliente_id INTEGER REFERENCES clientes(id),
    produto_id INTEGER REFERENCES produtos(id),
    quantidade INTEGER NOT NULL,
    data_pedido DATE NOT NULL
);

Questões 

--  Contar o número total de clientes

SELECT COUNT(*) AS total_clientes
FROM clientes;

-- Contar o número total de pedidos

SELECT COUNT(*) AS total_pedidos
FROM pedidos;

--  Calcular o valor total de todos os pedidos

SELECT SUM(p.quantidade * pr.preco) AS valor_total_pedidos
FROM pedidos p 
JOIN produtos pr ON pr.produto_id = p.id;

--  Calcular a média de preço dos produtos

SELECT AVG(preco) AS media_preco_produtos
FROM produtos;

--  Listar todos os clientes e seus pedidos

SELECT c.nome, p.id_pedido, p.data_pedido
FROM clientes c
LEFT JOIN pedidos p ON c.id_cliente = p.id_cliente;



--  Listar todos os pedidos e seus produtos, incluindo pedidos sem produtos

SELECT p.id_pedido, pr.nome AS produto, ip.quantidade
FROM pedidos p
LEFT JOIN itens_pedido ip ON p.id_pedido = ip.id_pedido
LEFT JOIN produtos pr ON ip.id_produto = pr.id_produto;

--  Listar os produtos mais caros primeiro

SELECT nome, preco
FROM produtos
ORDER BY preco DESC;

--  Listar os produtos com menor estoque

SELECT nome, estoque
FROM produtos
ORDER BY estoque ASC;

--  Contar quantos pedidos foram feitos por cliente

SELECT c.nome, COUNT(p.id_pedido) AS total_pedidos
FROM clientes c
LEFT JOIN pedidos p ON c.id_cliente = p.id_cliente
GROUP BY c.id_cliente;

--  Contar quantos produtos diferentes foram vendidos

SELECT COUNT(DISTINCT ip.id_produto) AS total_produtos_vendidos
FROM itens_pedido ip;

--  Mostrar os clientes que não realizaram pedidos

--  Mostrar os produtos que nunca foram vendidos

--  Contar o número de pedidos feitos por dia

SELECT DATE(data_pedido) AS data, COUNT(id_pedido) AS total_pedidos
FROM pedidos
GROUP BY DATE(data_pedido)
ORDER BY data DESC;

--  Listar os produtos mais vendidos

SELECT pr.nome, SUM(ip.quantidade) AS total_vendas
FROM itens_pedido ip
JOIN produtos pr ON ip.id_produto = pr.id_produto
GROUP BY pr.id_produto
ORDER BY total_vendas DESC;


--  Encontrar o cliente que mais fez pedidos

SELECT c.nome, COUNT(p.id_pedido) AS total_pedidos
FROM clientes c
JOIN pedidos p ON c.id_cliente = p.id_cliente
GROUP BY c.id_cliente
ORDER BY total_pedidos DESC
LIMIT 1;

--  Listar os pedidos e os clientes que os fizeram, incluindo pedidos sem clientes

SELECT p.id_pedido, c.nome AS cliente
FROM pedidos p
LEFT JOIN clientes c ON p.id_cliente = c.id_cliente;

--  Listar os produtos e o total de vendas por produto

SELECT pr.nome, SUM(ip.quantidade) AS total_vendas
FROM itens_pedido ip
JOIN produtos pr ON ip.id_produto = pr.id_produto
GROUP BY pr.id_produto
ORDER BY total_vendas DESC;

--  Calcular a média de quantidade de produtos por pedido

--  Listar os pedidos ordenados por data (mais recentes primeiro)

SELECT id_pedido, data_pedido
FROM pedidos
ORDER BY data_pedido DESC;

--  Contar quantos clientes possuem telefone cadastrado

SELECT COUNT(*) AS total_clientes_com_telefone
FROM clientes
WHERE telefone IS NOT NULL;

--  Encontrar o cliente que gastou mais dinheiro em pedidos.

SELECT c.nome, SUM(p.total) AS total_gasto
FROM clientes c
JOIN pedidos p ON c.id_cliente = p.id_cliente
GROUP BY c.id_cliente
ORDER BY total_gasto DESC
LIMIT 1;

-- Listar os 5 produtos mais vendidos.

SELECT pr.nome, SUM(ip.quantidade) AS total_vendas
FROM itens_pedido ip
JOIN produtos pr ON ip.id_produto = pr.id_produto
GROUP BY pr.id_produto
ORDER BY total_vendas DESC
LIMIT 5;

-- Listar os clientes que já fizeram pedidos e o número de pedidos de cada um.

SELECT c.nome, COUNT(p.id_pedido) AS total_pedidos
FROM clientes c
JOIN pedidos p ON c.id_cliente = p.id_cliente
GROUP BY c.id_cliente;

-- Encontrar a data com mais pedidos realizados

SELECT DATE(data_pedido) AS data, COUNT(id_pedido) AS total_pedidos
FROM pedidos
GROUP BY DATE(data_pedido)
ORDER BY total_pedidos DESC
LIMIT 1;

-- Calcular a média de valor gasto por pedido

SELECT AVG(p.quantidade * pr.preco) AS media_valor_pedido
FROM pedidos p 
JOIN produtos pr ON pr.produto_id = p.id;
